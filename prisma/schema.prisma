// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  DRIVER
  PASSENGER
}

enum VehicleType {
  BIKE
  AUTO
  CAR
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String
  password String
  role Role
  vehicle Vehicle?
  passengerRides Ride[] @relation(name: "Passenger")
  driverRides Ride[] @relation(name: "Driver")

  @@map("users")
}

model Vehicle {
  id Int @id @default(autoincrement())
  companyName String
  modelName String
  registrationNumber String
  vehicleType VehicleType
  driverId Int @unique
  driver User @relation(fields: [driverId], references: [id])

  @@map("vehicles")
}

model Ride {
  id Int @id @default(autoincrement())
  totalFare Int
  pickup String
  destination String
  passengerId Int
  passenger User @relation(name: "Passenger", fields: [passengerId], references: [id])
  driverId Int
  driver User @relation(name: "Driver", fields: [driverId], references: [id])
  isTripEnded Boolean @default(false)

  @@map("rides")
}
